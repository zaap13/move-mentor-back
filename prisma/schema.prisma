generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique @db.VarChar(255)
  password      String         @db.VarChar(255)
  username      String         @db.VarChar(255)
  image         String         @db.VarChar(255)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  sessions      Session[]
  subscriptions Subscription[]
  Progress      Progress[]
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id            Int            @id @default(autoincrement())
  title         String
  description   String?
  image         String         @db.VarChar(255)
  lessons       Lesson[]
  subscriptions Subscription[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

enum UserColor {
  w
  b
}

model Lesson {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  order       Int        @default(autoincrement())
  courseId    Int
  Course      Course     @relation(fields: [courseId], references: [id])
  progresses  Progress[]
  piece       String?
  position    Json?
  moves       Json?
  userColor   UserColor?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Progress {
  id        Int      @id @default(autoincrement())
  completed Boolean
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  lessonId  Int
  Lesson    Lesson   @relation(fields: [lessonId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, lessonId])
}

model Subscription {
  id        Int      @id @default(autoincrement())
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  courseId  Int
  Course    Course   @relation(fields: [courseId], references: [id])
  progress  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, courseId])
}
